Ansible Modules
Ansible modules are units of code that can control system resources or execute system commands. Ansible provides a module library that you can execute directly on remote hosts or through playbooks. You can also write custom modules.

Ping Module
ansible -i inventory all -m ping
Stat Module
ansible -i inventory all -m stat -a "path=/var/www/html"
User Module
ansible -i inventory all -m user -a "name=naresh" -b
Setup Module
ansible -i inventory all -m setup
File Module
ansible -i inventory all -m file -a "name=demo state=touch"
Copy Module
ansible -i inventory all -m copy -a "src=file1 dest="
Yum or Apt Module (Very Important)
Basic states:

name=httpd (install)
state=latest
state=present
state=absent
Example:

ansible all -m yum -a "name=httpd state=latest"

Ansible Commands for Managing Services and Packages
ansible all -m yum -a "name=httpd state=latest" -b
ansible all -m yum -a "name=httpd state=present" -b
ansible all -m yum -a "name=httpd state=absent" -b
(name = systemctl or service)

state=stopped
state=started
state=restarted
Examples:
ansible -i inventory all -m yum -a "name=httpd state=latest" -b          # to install httpd
ansible -i inventory all -m service -a "name=httpd state=started" -b     # to start service
ansible -i inventory all -m service -a "name=httpd state=stopped" -b     # to stop service
ansible -i inventory all -m yum -a "name=httpd state=absent" -b          # to uninstall service
ansible -i inventory all -m service -a "name=httpd state=restarted" -b   # to restart service
ansible all -m systemd -a "name=httpd" -b   # to know the status module
Host Key Verification
Set host key verification to false (default is true):

sudo vi /etc/ansible/ansible.cfg   # create config file


Sample Ad-hoc Command
Ad-hoc commands are commands which can be run individually to perform quick functions.

Ansible Ad-hoc Commands
172.31.25.78 # this command is to define our own path inventory
ansible all -a "yum install git -y" -b # this command is for default path of inventory so no need to give "-i inventory argument"
-b is become a root
-a is ad-hoc argument
all is apply for all hosts (we can replace with specific IP if needed)
Example:

[web]
192.168.1.2
[test]
192.168.1.3
If I want to run any ad-hoc command, give below example.

Would you like me to format this into a document or add more examples for practice?








You said:

give me same 
png
Copilot said:
Copilot
Here is the exact content from the image you uploaded:

If I want to run any ad-hoc command, give below example:

ansible web -a "yum install git -y" -b
Examples:

ansible -i inventory all -a "yum install maven -y" -b   # with defined inventory

ansible all -a "git --version" -b                       # default inventory

ansible -i inventory all -a "touch file100"

Ansible Modules
Ansible modules are units of code that can control system resources or execute system commands. Ansible provides a module library that you can execute directly on remote hosts or through playbooks. You can also write custom modules.

Ping Module
ansible -i inventory all -m ping
Stat Module
ansible -i inventory all -m stat -a "path=/var/www/html"
User Module
ansible -i inventory all -m user -a "name=naresh" -b
Setup Module
ansible -i inventory all -m setup
File Module
ansible -i inventory all -m file -a "name=demo state=touch"
Copy Module
ansible -i inventory all -m copy -a "src=file1 dest="
Yum or Apt Module (Very Important)
Basic states:

name=httpd (install)
state=latest
state=present
state=absent
Example:

ansible all -m yum -a "name=httpd state=latest"

Ansible Commands for Managing Services and Packages
ansible all -m yum -a "name=httpd state=latest" -b
ansible all -m yum -a "name=httpd state=present" -b
ansible all -m yum -a "name=httpd state=absent" -b
(name = systemctl or service)

state=stopped
state=started
state=restarted
Examples:
ansible -i inventory all -m yum -a "name=httpd state=latest" -b          # to install httpd
ansible -i inventory all -m service -a "name=httpd state=started" -b     # to start service
ansible -i inventory all -m service -a "name=httpd state=stopped" -b     # to stop service
ansible -i inventory all -m yum -a "name=httpd state=absent" -b          # to uninstall service
ansible -i inventory all -m service -a "name=httpd state=restarted" -b   # to restart service
ansible all -m systemd -a "name=httpd" -b   # to know the status module
Host Key Verification

================ Host Key verification put false by default it is true ================

sudo vi /etc/ansible/ansible.cfg   # create config file

[defaults]
host_key_checking = False


